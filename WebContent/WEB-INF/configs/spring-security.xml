<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
		 xmlns:b="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">
	<http use-expressions="true">
		<csrf disabled="true" />
		<intercept-url pattern="/admin" access="hasAnyRole('ROLE_ADMIN','ROLE_EDITOR','ROLE_USER')" />
		<intercept-url pattern="/admin/user" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/contact" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/cart" access="hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')" />
		<intercept-url pattern="/admin/cart/delAll" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/cart/del/*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/**" access="permitAll()" />  
		<form-login
			login-page="/auth/login"
			login-processing-url="/auth/login"
			password-parameter="password"
			username-parameter="username"
			default-target-url="/admin"
			always-use-default-target="true"
			authentication-failure-url="/auth/login?msg=Error"
		 />
		 <logout
		 	logout-url="/auth/logout"
		 	logout-success-url="/auth/login"
		 	invalidate-session="true"
		 />
		 <access-denied-handler error-page="/auth/403"/>
	</http>
	
	<user-service>
		<user name="admin" password="12345678" authorities="ROLE_ADMIN" locked="false" disabled="false"/>
	</user-service>
	<b:bean id="BCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></b:bean>
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource" 
				users-by-username-query="SELECT username,password,active FROM users WHERE username=? and active = 1"
				authorities-by-username-query="SELECT username,concat('ROLE_',name) role FROM users INNER JOIN  roles ON users.roleId = roles.roleId WHERE username=?"
				 />
			<password-encoder hash="bcrypt" ref="BCryptPasswordEncoder" />
			
		</authentication-provider>
		
	</authentication-manager>

</b:beans>

